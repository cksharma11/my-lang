language ::= function | expr | val | language
	val ::= <'val'> space+ identifier space+ <':'> space+ expr
	expr ::=  number
	          | identifier
	          |  expr space operator space expr
	          | <'('> expr <')'>
	          | fn-call
	          | condition
	function ::= <'fun'> space+ identifier space+ args space+ <':'> space expr
	identifier ::= #'[a-z]+[0-9]*[a-z,A-Z]*'
	args ::= <'['> (identifier space+)* identifier <']'>
	fn-call ::= identifier <'('> (expr <','> space)* expr <')'>
	condition ::= <'if'> space <'('> expr <')'> space <'then'> space+ expr space+ <'else'> space+ expr
	operator ::= add | sub | div | mul | eq | not-eq
	add ::= <'+'>
	sub ::= <'-'>
	div ::= <'/'>
	mul ::= <'*'>
	eq ::= <'=='>
	not-eq ::= <'!='>
	number ::= #'[0-9]+'
	<space> ::= <#' '*>